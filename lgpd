<!doctype html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Termos de Uso — Bem-vindo</title>
  <style>
    :root{
      --bg:#f4f6fb;
      --card:#ffffff;
      --accent:#2b6cb0;
      --muted:#6b7280;
      --shadow: 0 8px 30px rgba(15,23,42,0.08);
      font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    }
    html,body{height:100%;margin:0;background:linear-gradient(180deg,#eef2ff 0%,var(--bg) 100%);color:#0f172a}
    .wrap{
      min-height:100vh;
      display:flex;
      align-items:center;
      justify-content:center;
      padding:28px;
    }
    .card{
      max-width:920px;
      width:100%;
      background:var(--card);
      border-radius:14px;
      box-shadow:var(--shadow);
      padding:28px;
      display:flex;
      gap:28px;
      align-items:center;
      flex-wrap:wrap;
    }

    .brand{
      flex:1 1 260px;
      min-width:220px;
      display:flex;
      flex-direction:column;
      gap:12px;
    }
    .brand .logo{
      width:68px;height:68px;border-radius:12px;background:linear-gradient(135deg,var(--accent),#7c3aed);
      display:flex;align-items:center;justify-content:center;color:white;font-weight:700;font-size:20px;
    }
    h1{margin:0;font-size:20px}
    p.lead{margin:0;color:var(--muted)}
    .actions{
      flex:1 1 360px;
      min-width:260px;
      display:flex;
      flex-direction:column;
      gap:16px;
    }
    .terms-preview{
      border:1px solid #e6e9ef;
      border-radius:8px;
      padding:14px;
      background:#fbfdff;
      max-height:178px;
      overflow:auto;
      color:#111827;
    }
    label.checkbox{
      display:flex;
      gap:12px;
      align-items:center;
      cursor:pointer;
      user-select:none;
    }
    input[type="checkbox"]{
      width:18px;height:18px;border-radius:4px;border:1px solid #cbd5e1;
      accent-color: var(--accent);
    }
    .btn{
      display:inline-flex;
      align-items:center;
      justify-content:center;
      gap:8px;
      border:0;
      padding:12px 16px;
      border-radius:10px;
      font-weight:600;
      cursor:pointer;
    }
    .btn.primary{
      background:var(--accent);
      color:#fff;
      box-shadow:0 6px 20px rgba(43,108,176,0.18);
    }
    .btn.ghost{
      background:transparent;
      color:var(--accent);
      border:1px solid #dbeafe;
    }
    .btn[disabled]{
      opacity:0.55;
      cursor:not-allowed;
    }

    /* modal */
    .modal-backdrop{
      position:fixed;inset:0;background:rgba(3,7,18,0.45);display:none;align-items:center;justify-content:center;z-index:60;
    }
    .modal{
      width:min(920px,96%);
      max-height:84vh;
      overflow:auto;
      background:var(--card);
      border-radius:12px;
      padding:18px;
      box-shadow:0 30px 80px rgba(2,6,23,0.6);
    }
    .modal h2{margin:0 0 8px 0}
    .modal .modal-body{color:#111827;line-height:1.5}
    .modal .close{
      position:absolute;right:18px;top:18px;border:0;background:transparent;font-size:18px;cursor:pointer;color:var(--muted)
    }

    @media (max-width:740px){
      .card{padding:18px}
      .brand{order:2;width:100%}
      .actions{order:1;width:100%}
    }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="card" role="main" aria-labelledby="title">
      <div class="brand" aria-hidden="false">
        <div class="logo" aria-hidden="true">LOGO</div>
        <h1 id="title">Bem-vindo ao Projeto</h1>
        <p class="lead">Antes de continuar, leia e aceite nossos Termos de Uso e Política de Privacidade.</p>
      </div>

      <div class="actions" aria-live="polite">
        <div class="terms-preview" id="termsPreview" tabindex="0" aria-label="Resumo dos termos">
          <strong>Resumo:</strong>
          <p>
            Esses termos descrevem os direitos e obrigações ao usar este site. Ao aceitar, você concorda com o processamento de seus dados conforme a nossa política de privacidade, bem como com as regras de conduta e uso do serviço.
          </p>
          <p style="margin-top:8px"><em>Leia o documento completo para mais detalhes.</em></p>
        </div>

        <div style="display:flex;gap:12px;align-items:center;flex-wrap:wrap;">
          <label class="checkbox" for="acceptCheckbox">
            <input id="acceptCheckbox" type="checkbox" aria-describedby="checkboxHelp" />
            <span>Li e aceito os <a href="http://unasp.br/lgpd" target="_blank" rel="noopener noreferrer"><button id="openTerms" class="btn ghost" type="button">Termos e Política</button></span></a> 
          </label>
          <small id="checkboxHelp" style="color:var(--muted)">Você precisa aceitar para continuar</small>
        </div>

        <div style="display:flex;gap:10px;align-items:center;">
          <button id="continueBtn" class="btn primary" disabled>Aceitar e Continuar</button>
          <button id="declineBtn" class="btn ghost">Recusar</button>
        </div>

        <div style="font-size:13px;color:var(--muted)">
          <strong>Privacidade:</strong> os dados mínimos necessários serão armazenados para permitir sua experiência no site.
        </div>
      </div>
    </div>
  </div>

  

  <script>
    (function(){
      const KEY = 'termsAccepted_v1';
      const accepts = localStorage.getItem(KEY);
      const continueBtn = document.getElementById('continueBtn');
      const checkbox = document.getElementById('acceptCheckbox');
      const openTerms = document.getElementById('openTerms');
      const modalBackdrop = document.getElementById('modalBackdrop');
      const closeModal = document.getElementById('closeModal');
      const modalClose = document.getElementById('modalClose');
      const modalAccept = document.getElementById('modalAccept');
      const declineBtn = document.getElementById('declineBtn');

      // Se já aceitou antes -> redireciona (editar destino conforme necessário)
      if (accepts === 'true') {
        // Redireciona direto para a página principal do site
        window.location.href = '/home.html'; // <--- ajuste para seu caminho real
      }

      // Habilitar botão apenas se checkbox marcado
      checkbox.addEventListener('change', () => {
        continueBtn.disabled = !checkbox.checked;
      });

      // Abrir modal de termos
      function showModal() {
        modalBackdrop.style.display = 'flex';
        modalBackdrop.setAttribute('aria-hidden','false');
        // foco no topo do modal para leitores de tela
        document.querySelector('.modal').focus();
        // prevenir scroll do body
        document.body.style.overflow = 'hidden';
      }
      function hideModal() {
        modalBackdrop.style.display = 'none';
        modalBackdrop.setAttribute('aria-hidden','true');
        document.body.style.overflow = '';
      }

      openTerms.addEventListener('click', showModal);
      closeModal.addEventListener('click', hideModal);
      modalClose.addEventListener('click', hideModal);

      // Aceitar via modal
      modalAccept.addEventListener('click', () => {
        checkbox.checked = true;
        continueBtn.disabled = false;
        hideModal();
      });

      // Fechar modal com Esc
      window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modalBackdrop.style.display === 'flex') hideModal();
      });

      // Aceitar e continuar: salvar e redirecionar
      continueBtn.addEventListener('click', () => {
        if (!checkbox.checked) return;
        localStorage.setItem(KEY, 'true');
        // Redirecionamento após aceitar (altere para o destino correto)
        window.location.href = '/home.html';
      });

      // Recusar: opcional - aqui mostra alerta e não permite continuar
      declineBtn.addEventListener('click', () => {
        alert('Você recusou os termos. Algumas funcionalidades podem ficar indisponíveis.');
      });

      // Acessibilidade: abrir modal ao focar e pressionar Enter na prévia
      const termsPreview = document.getElementById('termsPreview');
      termsPreview.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' || e.key === ' ') showModal();
      });

      // Evita envio por Enter acidental quando checkbox está focado
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' && document.activeElement === checkbox) e.preventDefault();
      });
    })();
  </script>
</body>
</html>
